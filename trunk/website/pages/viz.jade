script
	var currentProject = "!{vizJson.projectName}";
	function hideAll(){
		document.getElementById('waitbox').style.visibility = 'visible';
	}
	function showAll(){
		document.getElementById('waitbox').style.visibility = 'hidden';
	}
script(type="text/javascript", src="http://atelier.inf.usi.ch/~babazadm/sdegenesis/scripts/js/src/eventHandler.js")
script(src="http://ajax.googleapis.com/ajax/libs/jquery/1.6.2/jquery.min.js", type="text/javascript")
script(src="http://ajax.googleapis.com/ajax/libs/jqueryui/1.8.16/jquery-ui.min.js", type="text/javascript")
script(src="http://jquery-ui.googlecode.com/svn/tags/latest/external/jquery.bgiframe-2.1.2.js", type="text/javascript")
script(src="http://ajax.googleapis.com/ajax/libs/jqueryui/1.8.16/i18n/jquery-ui-i18n.min.js", type="text/javascript")
script(type="text/javascript", src="http://atelier.inf.usi.ch/~babazadm/sdegenesis/scripts/js/lib/mbostock/d3.js")
script(type="text/javascript", src="http://atelier.inf.usi.ch/~babazadm/sdegenesis/scripts/js/lib/mbostock/d3.time.js")
script(type="text/javascript", src="http://atelier.inf.usi.ch/~babazadm/sdegenesis/scripts/js/lib/mbostock/d3.layout.js")
script(type="text/javascript", src="http://atelier.inf.usi.ch/~babazadm/sdegenesis/scripts/js/lib/mbostock/d3.geom.js")
script(type="text/javascript", src="http://atelier.inf.usi.ch/~babazadm/sdegenesis/scripts/js/src/deepCopy.js")
script(type="text/javascript", src="http://atelier.inf.usi.ch/~babazadm/sdegenesis/scripts/js/src/ModelGraph.js")
script(type="text/javascript", src="http://atelier.inf.usi.ch/~babazadm/sdegenesis/scripts/js/src/Trees.js")
script(type="text/javascript", src="http://atelier.inf.usi.ch/~babazadm/sdegenesis/scripts/js/src/Sunbursts.js")
script(type="text/javascript", src="http://atelier.inf.usi.ch/~babazadm/sdegenesis/scripts/js/src/Graph.js")
script(type="text/javascript", src="http://atelier.inf.usi.ch/~babazadm/sdegenesis/scripts/js/src/GraphToD3Graph.js")
script(type="text/javascript", src="http://atelier.inf.usi.ch/~babazadm/sdegenesis/scripts/js/src/edge_data.js")
script(type="text/javascript", src="http://atelier.inf.usi.ch/~babazadm/sdegenesis/scripts/js/src/node_data.js")
script(type="text/javascript", src="http://atelier.inf.usi.ch/~babazadm/sdegenesis/scripts/js/src/displayInfo.js")
script(type="text/javascript", src="http://atelier.inf.usi.ch/~babazadm/sdegenesis/scripts/js/src/force.js")
script(type="text/javascript", src="http://atelier.inf.usi.ch/~babazadm/sdegenesis/scripts/js/src/VisualizationRegister.js")
script(type="text/javascript", src="http://atelier.inf.usi.ch/~babazadm/sdegenesis/scripts/js/src/Visualization.js")
script(type="text/javascript", src="http://atelier.inf.usi.ch/~babazadm/sdegenesis/scripts/js/src/options/SizeFunction.js")
script(type="text/javascript", src="http://atelier.inf.usi.ch/~babazadm/sdegenesis/scripts/js/src/options/StrokeFunction.js")
script(type="text/javascript", src="http://atelier.inf.usi.ch/~babazadm/sdegenesis/scripts/js/src/options/ColorFunction.js")
script(type="text/javascript", src="http://atelier.inf.usi.ch/~babazadm/sdegenesis/scripts/js/src/cleanHistory.js")
script(type="text/javascript", src="http://atelier.inf.usi.ch/~babazadm/sdegenesis/scripts/js/src/authors/AuthorAnalysis.js")
script(type="text/javascript", src="http://atelier.inf.usi.ch/~babazadm/sdegenesis/scripts/js/src/authors/authors.js")
script(type="text/javascript", src="http://atelier.inf.usi.ch/~babazadm/sdegenesis/scripts/js/src/AnalysisUtils.js")
script(type="text/javascript", src="http://atelier.inf.usi.ch/~babazadm/sdegenesis/scripts/js/src/Analysis.js")
script(type="text/javascript", src="http://atelier.inf.usi.ch/~babazadm/sdegenesis/scripts/js/src/Revision.js")
script(type="text/javascript", src="http://atelier.inf.usi.ch/~babazadm/sdegenesis/scripts/js/src/Overlay.js")
script(type="text/javascript", src="http://atelier.inf.usi.ch/~babazadm/sdegenesis/scripts/js/src/timeline.js")
script(type="text/javascript", src="http://atelier.inf.usi.ch/~babazadm/sdegenesis/scripts/js/src/tooltip.js")
script(type="text/javascript", src="http://atelier.inf.usi.ch/~babazadm/sdegenesis/scripts/js/src/calendar/calendar.js")
script(type="text/javascript", src="http://atelier.inf.usi.ch/~babazadm/sdegenesis/scripts/js/src/TimelineHandler.js")
script(type="text/javascript", src="http://atelier.inf.usi.ch/~babazadm/sdegenesis/scripts/js/src/Helpers.js")
script(type="text/javascript", src="http://atelier.inf.usi.ch/~babazadm/sdegenesis/scripts/js/src/QueryLanguage.js")


script(type="text/javascript")
	
	$(function() {
		$( "#overlay-transparent" ).hide();
		
	});
	
	var projects = [];
	projects.push({
		"!{vizJson.projectName}" : {
			totalRevisions : [!{vizJson.revisions}],
			//heldRevisions stores an object of the form {revisionNumber: nmbr, graph: graph, ecc.}
			heldRevisions : new Array(),
			history : undefined,
			currRev : undefined,
			btInfo : undefined,
			getRevision : function(proj, rev, callback){
					//for(var i = 0; i < heldRevisions.length; i++){
					if(proj.heldRevisions[rev] == false){
						//alert("ritorno");
						return;
					}
					else if(proj.heldRevisions[rev] != undefined){
						//alert("cel'ho giÃ ")
						if(callback)
							callback(proj.heldRevisions[rev]);
					}
					//}
					else{
						//alert("ueo, la richiedo")
						proj.heldRevisions[rev] = false;
						//hideAll();
						$.ajax({
							url: '/get_data/'+ "!{vizJson.projectName}" +'/' + rev,
							error: function (data ){
								alert("Some problem happened: " + JSON.stringify(data));
							},
							success: function( data ) {
								//showAll();
								//alert("ricevuto: " + JSON.strigify(data));
								var nodes = data.nodes;
								var edges = data.edges;
								if (nodes == "ERROR" || edges == "ERROR") {
									proj.history[rev].hasMse = false;
									return;
								}
								var graph = genesis.Graph.create(nodes,edges);
								proj.heldRevisions[rev] = new Revision(currentProject, rev);
								proj.heldRevisions[rev].graph = graph;
								if(callback){
									callback(proj.heldRevisions[rev]);
								}
							}
						});
					}
				},
			getHistory : function(proj){
					if(proj.history == undefined){
						hideAll();
						$.ajax({
							url: '/get_history/'+ "!{vizJson.projectName}",
							error: function (data ){
								alert("Some problem happened: " + JSON.stringify(data));
							},
							success: function( data ) {
								var h = data.history;
								proj.history = h;
								proj.currRev = 500;
								displayTimeline(h, canvas_width, canvas_height, function(x){return x});
								insertButtonsForTimeline();
								var revsToPrefetch = prefetchRevisions(10, h, proj);
								showAll();
								return h;
							}
						});
					}
					else {
						return proj.history;
					}
				},
			getBTInfo : function(proj){
				if(proj.btInfo){
					return proj.btInfo;
				}
				else {
					hideAll();
					$.ajax({
						url: '/get_btinfo/'+ "!{vizJson.projectName}",
						error: function (data ){
							alert("Some problem happened: " + JSON.stringify(data));
						},
						success: function( data ) {
							var info = data.btInfo;
							proj.btInfo = info;
							showAll();
							return info;
						}
					});
				}
			}
		}
	});

#overlay-transparent
	#overlay(class="ui-widget-content ui-corner-all")
		h3(class="ui-widget-header ui-corner-all") Entities
		#nodes
	
		script(type="text/javascript")
			displayMultiple('nodes', [{name:'Class',value:'Classes'}, {name:'Method',value:'Methods'}, {name:'Revision',value:'History'}, {name:'Author',value:'Authors'}]);
	
		h3(class="ui-widget-header ui-corner-all") Query
		input(id="query", type="text", style="width: 89%; margin-right:10px")
		input(type="submit", onclick="javascript:filterResults()", class="submit", style="width: 9%", value="Filter", id="submitStoCazzo") Filter
		table(id="results-analysis")
			tr
				td
					h3(class="ui-widget-header ui-corner-all") Candidates
					#results
				td			
					h3(class="ui-widget-header ui-corner-all") Analysis \& Viz
					#analysis

#topmenu
	ul(id="menu-nav")
		li(id="show-hide", class="two")
			a(class="topnav", target="_top", href="#", onclick="showHide()") Show
		li(class="two")
			a(class="topnav", target="_top", href="#", onclick="clickProjects()") Projects
		li(class="two")
			a(class="topnav", target="_top", href="#", onclick="clickNew()") New Project
		li(class="logout")
			a(class="topnav", target="_top", href="/logout") Logout

#waitbox
	img(src="http://atelier.inf.usi.ch/~babazadm/sdegenesis/website/pages/img/loader.gif")

#projects
	form(name="saveProject", action="/saveProject/", method="post")
		- var items = userInfo.projects
		- if(items.length > 0)
			table(id="projectstable")
				tr
					th Project Name
					th Sharing Options
					th Status
					th(id="deleteid") Delete
					each item in items
						tr
							td
								a(href=item.name + "/")= item.name + ""
							- if(item.defaultShared)
								td= "Shared"
							- else
								td
									label(class="form-select")
										select(name="project[shared]")
											- if(item.open == 0)
												option Private
												option Shared
											- else
												option Shared
												option Private
							td= item.status
							td(id="deleteid") 
								a(href="/delete_project/" + item.name)
									img(src="http://atelier.inf.usi.ch/~babazadm/sdegenesis/website/pages/img/delete.png")
		- else
			p= "You have no project to analyze. Click New Project to add one."
		// input(type="submit", class="submit", value="Save", id="submissionButton") Save

#addProject
	form(name="addProject", action="/addProject", method="post")
		table
			tr
				td(class="caption") Project Name *
				td(colspan="5")
					input(type="text", id="projectName", name="project[name]", onblur="validateSubmission()")
			tr
				td(class="caption") Repository address *
				td(colspan="5")
					input(type="text", id="svnurl", name="project[repo]", onblur="validateSubmission()")
				td(class="select")
					label(class="form-select")
						select(name="project[repoType]")
							option SVN
							option(disabled="disabled") CVS
							option(disabled="disabled") GIT
			tr
				td(class="caption") Bugtracker Name
				td(colspan="5")
					input(type="text", id="projectNameBugtracker", name="project[projectnamebugtracker]", onblur="validateSubmission()")
			tr
				td(class="caption") Bugtracker address
				td(colspan="5")
					input(type="text", id="bugtracker", name="project[bugtracker]", onblur="validateSubmission()")
				td(class="select")
					label(class="form-select")
						select(name="project[btType]")
							option None
							option Bugzilla
							option(disabled="disabled") JIRA
			tr
				td(class="caption") Smaller revision *
				td 
					input(type="text", id="fromRev", name="project[fromRev]")
				td(class="rev-caption-inner") Higher revision **
				td 
					input(type="text", id="toRev", name="project[toRev]")
				td(class="rev-caption-inner") Revision step *
				td 
					input(type="text", id="stepRev", name="project[stepRev]")
			tr
				td(class="caption") Repository username
				td(colspan="2")
					input(type="text", id="repoUsername", name="project[repoUsername]")
				td(class="caption-inner") Repository password
				td(colspan="2") 
					input(type="password", id="repoPassword", name="project[repoPassword]")
			tr
				td(class="caption") BugTracker username
				td(colspan="2")
					input(type="text", id=btUsername", name="project[btUsername]")
				td(class="caption-inner") BugTracker password
				td(colspan="2") 
					input(type="password", id=btPassword", name="project[btPassword]")	
			tr
				td
					#legend
						p (*) Mandatory field
						p (**) If not specified checkout until HEAD
				td(colspan="6", class="but")
					span 
						input(type="submit", class="submit", value="Send", id="submissionButton") Submit request		
		#error
					

	script(type="text/javascript")
		$(document).ready(function(){
			$("li.two a").click(function() {
				$("li.two").removeClass("selected");
				$(this).parents().addClass("selected");
				return false;
			});
		});
	
	script
		function validateSubmission(){
			//Checks if some field has or is not an url
			var pname = document.getElementById('projectName');
			var repourl = document.getElementById('svnurl');
			var bturl = document.getElementById('bugtracker');
			var regexp = "/http:\/\/[A-Za-z0-9\.-]{3,}\.[A-Za-z]{3}/";
			if(!isUrl(repourl.value) || hasLineFeed(pname.value)){
				document.getElementById('error').innerHTML = "The urls or the name contain invalid characters!";
				document.getElementById("submissionButton").disabled = true;
				return false;
			}
			else{
				document.getElementById('error').innerHTML = "";
				document.getElementById("submissionButton").disabled = false;
				return true;
			}
		}
	
		function clickProjects(){
			document.getElementById("projects").style.display = "block";
			document.getElementById("addProject").style.display = "none";
			// document.getElementById("vizContainer").style.display = "none";
		}
		function clickNew(){
			document.getElementById("addProject").style.display = "block";
			document.getElementById("projects").style.display = "none";
			// document.getElementById("vizContainer").style.display = "none";
		}

		document.getElementById("addProject").style.display = "none";
		document.getElementById("projects").style.display = "none";
		document.getElementById("submissionButton").disabled = true;

#treename
#monitor
#chart
#slidingUpTimeline
	#timelinechart
		button(id="group", class="first", onclick="transitionGroup()") Group
		button(id="stack", class="active last", onclick="transitionStack()") Stack
		button(id="highlight", class="active last", onclick="highlightMse()") toggle MSE
		button(id="backbutton", class="first", onclick="back()") Back
		button(id="playbutton", class="active last", onclick="play()") Play
		button(id="forwardbutotn", class="active last", onclick="forward()") Forward
		p

		#chart(class="Block Right", style="overflow:visible")

#bottompart
	img(src="http://atelier.inf.usi.ch/~babazadm/sdegenesis/website/pages/style/arrow.png", style="left: -50px")
	
script
	
	function graphTest() {
		var graph = genesis.Graph.create(!{JSON.stringify(nodes)}, !{JSON.stringify(edges)});
		var edges = graph.edges;
		var inhTree = graph.getSubtreeByRelationName("superclassOf", -2061828931);
		
		var c = [];
		for(var n in graph.nodes) {
			var node = graph.nodes[n];
			c.push( graph.getSubtreeByRelationName("superclassOf", node.uniqueId) )
		}
		return { name: "Inheritance Tree", children: c };
	}
	
	function update () {
		document.getElementById("slider_controls").style.display = "block";
	}
	
	function play(){
		var src = document.getElementById("playbutton").src;
		var file = src.substring(src.lastIndexOf("/")+1, src.length);
		
		if(file == "play.png"){
			document.getElementById("playbutton").src="img/pause.png";
		}else if(file =="pause.png"){
			document.getElementById("playbutton").src = "img/play.png";
		}
	}
	
	var vizs = "<ul>";
	for(var i = 0; i < analysis.length; i++){
		//adds directly a hook to get the version by adding as revision number the last element of the array of revisions
		vizs += "<li onclick='getVersion(\\""+analysis[i].name+"\\", \\"!{vizJson.projectName}\\", !{vizJson.revisions[vizJson.revisions.length - 1]})'>" + analysis[i].name + "</li>"
	}
	vizs += "</ul>"
	
	function getVersion(analysisName, projectName, revisionNumber){
		$.ajax({
			url: '/get_data/'+ projectName +'/' + revisionNumber,
			error: function (data){
				//alert("error : " + JSON.stringify(data));
			},
			success: function( data ) {
				var nodes = data.nodes;
				var edges = data.edges;
				
				var an = {};
				for(var i = 0; i < analysis.length; i++){
					if(analysis[i].name == analysisName){
						an = analysis[i];
						break;
					}
				}
				var possibleVizs = register.getVisualizations([an]);
				var graph = genesis.Graph.create(nodes,edges);
				currentAnalysis = an;
				
				
				var vis = possibleVizs[0];
				vis.options["filter"] = filterNodes(an.options.elementType, an.options.relation);
				vis.initializeFromGraph(graph);
				//fill the list & setup global variable
				currentDisplayedVis = vis;
				addCandidatesToElement(vis);
				
			}
		}); 
	}
	
	//candidates is an array of candidates for a choosen visualization 
	function addCandidatesToElement(vis){
		//fill the options
		var opts = "Nodes Options <br/> <ul>";
		var opList = getOptions(currentAnalysis, currentDisplayedVis);
		opList = opList.nodes.sizeFunction;
		for(var i = 0; i < opList.length; i++){
			opts += "<li  onclick=''>" + opList[i].name + "</li>"
		}
		opts += "</ul>"
		document.getElementById('nodesOptions').innerHTML = opts;
		
		var can = "<ul>"
		var candidates = vis.candidates();
		for(var i = 0; i < candidates.length; i++){
			can += "<li class='Candidates' onclick='displayGraphFromList(" + i + ");'>" + candidates[i].name + "</li>"
		}
		can += "</ul>";
		document.getElementById('roots').innerHTML = can;
	}
	
	//displays the chosen candidate's view
	function displayGraphFromList(candidate){
		var cans = currentDisplayedVis.candidates();
		currentDisplayedVis.visualize(cans[candidate], "#chart");
	}
	
	function clickProjects(){
		document.getElementById("projects").style.display = "block";
		document.getElementById("addProject").style.display = "none";
		document.getElementById('chart').style.display = 'none';
		document.getElementById('roots').style.display = 'none';
	}
	function clickNew(){
		document.getElementById("addProject").style.display = "block";
		document.getElementById("projects").style.display = "none";
		document.getElementById('chart').style.display = 'none';
		document.getElementById('roots').style.display = 'none';
	}
	
	$(function() {
		$('#nodes input').click(updateResults);
	});
	
	jQuery(function( $ ){
		// Get a reference to the container.
		var container = $( "#bottompart" );
		// Bind the link to toggle the slide.
		$( "#slidingUpTimeline" ).click(
			function( event ){
			// Prevent the default event.
			event.preventDefault();
			// Toggle the slide based on its current
			// visibility.
			if (container.is( ":visible" )){
				// Hide - slide up.
				container.slideUp( 500 );
			} else {
				// Show - slide down.
				container.slideDown( 500 );
			}
		});
	});
	
	// document.getElementById('overlay').style.visibility = 'hidden';
	document.getElementById('waitbox').style.visibility = 'hidden';
	projects[0]['argouml'].getHistory(projects[0]['argouml']);
