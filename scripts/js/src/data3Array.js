function dataArray() { var json = [
{ "name": "ArgoEvent","children": [{ "name": "ArgoHelpEvent"},
{ "name": "ArgoStatusEvent"},
{ "name": "ArgoProfileEvent"},
{ "name": "ArgoNotationEvent"},
{ "name": "ArgoGeneratorEvent"},
{ "name": "ArgoDiagramAppearanceEvent"},
]},
{ "name": "Critic","children": [{ "name": "CompoundCritic"},
{ "name": "CrUML","children": [{ "name": "CrConsiderSingleton"},
{ "name": "CrSingletonViolatedOnlyPrivateConstructors"},
{ "name": "CrConsiderFacade"},
{ "name": "CrSingletonViolatedMissingStaticAttr"},
{ "name": "CrOCL"},
{ "name": "CrMultipleAgg"},
{ "name": "CrConflictingComposites"},
{ "name": "CrProfile"},
{ "name": "CrInvalidJoinTriggerOrGuard"},
{ "name": "CrNoTriggerOrGuard"},
{ "name": "AbstractCrTooMany","children": [{ "name": "CrTooManyAttr"},
{ "name": "CrTooManyAssoc"},
{ "name": "CrTooManyOper"},
{ "name": "CrTooManyStates"},
{ "name": "CrTooManyTransitions"},
{ "name": "CrTooManyClasses"},
]},
{ "name": "CrNodeInsideElement"},
{ "name": "CrCircularComposition"},
{ "name": "CrUnnavigableAssoc"},
{ "name": "CrAssocNameConflict"},
{ "name": "CrAttrNameConflict"},
{ "name": "CrNonAggDataType"},
{ "name": "CrUtilityViolated"},
{ "name": "CrDupRoleNames"},
{ "name": "AbstractCrUnconventionalName","children": [{ "name": "CrUnconventionalAttrName"},
{ "name": "CrUnconventionalClassName"},
{ "name": "CrUnconventionalPackName"},
{ "name": "CrUnconventionalOperName"},
]},
{ "name": "CrMissingOperName"},
{ "name": "CrFinalSubclassed"},
{ "name": "CrInvalidPseudoStateTrigger"},
{ "name": "CrOppEndConflict"},
{ "name": "CrInvalidJoin"},
{ "name": "CrMultipleInitialStates"},
{ "name": "CrNodeInstanceWithoutClassifier"},
{ "name": "CrMultipleDeepHistoryStates"},
{ "name": "CrNodesOverlap"},
{ "name": "CrInterfaceAllPublic"},
{ "name": "CrSeqInstanceWithoutClassifier"},
{ "name": "CrNodeInstanceInsideElement"},
{ "name": "CrUselessAbstract"},
{ "name": "CrMultipleShallowHistoryStates"},
{ "name": "CrSubclassReference"},
{ "name": "CrWrongDepEnds"},
{ "name": "CrWrongLinkEnds"},
{ "name": "CrReservedName"},
{ "name": "CrJoinIncomingTransition"},
{ "name": "CrZeroLengthEdge"},
{ "name": "CrAlreadyRealizes"},
{ "name": "CrInterfaceOperOnly"},
{ "name": "CrDisambigClassName"},
{ "name": "CrNoTransitions"},
{ "name": "CrNoInstanceVariables"},
{ "name": "CrOppEndVsAttr"},
{ "name": "CrForkOutgoingTransition"},
{ "name": "CrNameConfusion"},
{ "name": "CrCircularAssocClass"},
{ "name": "CrDupParamName"},
{ "name": "CrNoInitialState"},
{ "name": "CrInterfaceWithoutComponent"},
{ "name": "CrMissingAttrName"},
{ "name": "CrNoIncomingTransitions"},
{ "name": "CrComponentInstanceWithoutClassifier"},
{ "name": "CrNameConflictAC"},
{ "name": "CrInvalidHistory"},
{ "name": "CrInstanceWithoutClassifier"},
{ "name": "CrIllegalGeneralization"},
{ "name": "CrNavFromInterface"},
{ "name": "CrInvalidSynch"},
{ "name": "CrIllegalName"},
{ "name": "CrConstructorNeeded"},
{ "name": "CrCircularInheritance"},
{ "name": "CrUselessInterface"},
{ "name": "CrObjectWithoutClassifier"},
{ "name": "CrInvalidForkTriggerOrGuard"},
{ "name": "CrComponentWithoutNode"},
{ "name": "CrClassMustBeAbstract"},
{ "name": "CrObjectWithoutComponent"},
{ "name": "CrOperNameConflict"},
{ "name": "CrMergeClasses"},
{ "name": "CrInvalidFork"},
{ "name": "CrCompInstanceWithoutNode"},
{ "name": "CrNoOutgoingTransitions"},
{ "name": "CrCrossNamespaceAssoc"},
{ "name": "CrMissingStateName"},
{ "name": "CrMissingClassName"},
{ "name": "CrEmptyPackage"},
{ "name": "CrInvalidInitial"},
{ "name": "CrMultiComposite"},
{ "name": "CrClassWithoutComponent"},
{ "name": "CrNWayAgg"},
{ "name": "CrNoAssociations"},
{ "name": "CrDisambigStateName"},
{ "name": "CrNoOperations"},
{ "name": "CrInvalidBranch"},
{ "name": "CrNameConflict"},
{ "name": "CrNoGuard"},
]},
]},
{ "name": "TreeModel","children": [{ "name": "AbstractGoList2","children": [{ "name": "GoListToPosterToItem"},
{ "name": "GoListToOffenderToItem"},
{ "name": "GoListToDecisionsToItems"},
{ "name": "GoListToGoalsToItems"},
{ "name": "GoListToTypeToItem"},
{ "name": "GoListToPriorityToItem"},
]},
{ "name": "TreeModelComposite","children": [{ "name": "ToDoPerspective","children": [{ "name": "ToDoByType"},
{ "name": "ToDoByPriority"},
{ "name": "ToDoByOffender"},
{ "name": "ToDoByGoal"},
{ "name": "ToDoByPoster"},
{ "name": "ToDoByDecision"},
]},
]},
{ "name": "DependTreeModel"},
]},
]; return json; }
