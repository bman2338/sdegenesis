#topmenu
	ul(id="menu-nav")
		li(class="two")
			a(class="topnav", target="_top", href="#", onclick="clickProjects()") Projects
		li(class="two")
			a(class="topnav", target="_top", href="#", onclick="clickNew()") New Project
		li(class="logout")
			a(class="topnav", target="_top", href="/logout") Logout

#projects
	form(name="saveProject", action="/saveProject/!{}", method="post")
		- var items = userInfo.projects
		- if(items.length > 0)
			table(id="projectstable")
				tr
					th Project Name
					// th Sharing Options
					th Status
					th(id="deleteid") Delete
					each item in items
						tr
							td
								a(href="show_project/" + item.name)= item.name + ""
							// - if(item.defaultShared)
							// 	td= Shared
							// - else
							// 	td
							// 		label(class="form-select")
							// 			select(name="project[shared]")
							// 				- if(item.open == 0)
							// 					option Private
							// 					option Shared
							// 				- else
							// 					option Shared
							// 					option Private
							td= item.status
							td(id="deleteid") 
								img(src="http://atelier.inf.usi.ch/~babazadm/testnode/pages/img/delete.png")
		- else
			p= "You have no project to analyze. Click New Project to add one."
		input(type="submit", class="submit", value="Send", id="submissionButton") Save

#addProject
	form(name="addProject", action="/addProject", method="post")
		table
			tr
				td(class="caption") Project Name *
				td(colspan="5")
					input(type="text", id="projectName", name="project[name]", onblur="validateSubmission()")
			tr
				td(class="caption") Repository address *
				td(colspan="5")
					input(type="text", id="svnurl", name="project[repo]", onblur="validateSubmission()")
				td(class="select")
					label(class="form-select")
						select(name="project[repoType]")
							option SVN
							option(disabled="disabled") CVS
							option(disabled="disabled") GIT
			tr
				td(class="caption") Bugtracker Name
				td(colspan="5")
					input(type="text", id="projectNameBugtracker", name="project[projectnamebugtracker]", onblur="validateSubmission()")
			tr
				td(class="caption") Bugtracker address
				td(colspan="5")
					input(type="text", id="bugtracker", name="project[bugtracker]", onblur="validateSubmission()")
				td(class="select")
					label(class="form-select")
						select(name="project[btType]")
							option None
							option Bugzilla
							option(disabled="disabled") JIRA
			tr
				td(class="caption") Smaller revision *
				td 
					input(type="text", id="fromRev", name="project[fromRev]")
				td(class="rev-caption-inner") Higher revision **
				td 
					input(type="text", id="toRev", name="project[toRev]")
				td(class="rev-caption-inner") Revision step *
				td 
					input(type="text", id="stepRev", name="project[stepRev]")
			tr
				td(class="caption") Repository username
				td(colspan="2")
					input(type="text", id="repoUsername", name="project[repoUsername]")
				td(class="caption-inner") Repository password
				td(colspan="2") 
					input(type="password", id="repoPassword", name="project[repoPassword]")
			tr
				td(class="caption") BugTracker username
				td(colspan="2")
					input(type="text", id=btUsername", name="project[btUsername]")
				td(class="caption-inner") BugTracker password
				td(colspan="2") 
					input(type="password", id=btPassword", name="project[btPassword]")	
			tr
				td
					#legend
						p (*) Mandatory field
						p (**) If not specified checkout until HEAD
				td(colspan="6", class="but")
					span 
						input(type="submit", class="submit", value="Send", id="submissionButton") Submit request		
		#error

script(type="text/javascript")
	$(document).ready(function(){
		$("li.two a").click(function() {
			$("li.two").removeClass("selected");
			$(this).parents().addClass("selected");
			return false;
		});
	});
	
script
	function validateSubmission(){
		//Checks if some field has or is not an url
		var pname = document.getElementById('projectName');
		var repourl = document.getElementById('svnurl');
		var bturl = document.getElementById('bugtracker');
		var regexp = "/http:\/\/[A-Za-z0-9\.-]{3,}\.[A-Za-z]{3}/";
		if(!isUrl(repourl.value) || hasLineFeed(pname.value)){
			document.getElementById('error').innerHTML = "The urls or the name contain invalid characters!";
			document.getElementById("submissionButton").disabled = true;
			return false;
		}
		else{
			document.getElementById('error').innerHTML = "";
			document.getElementById("submissionButton").disabled = false;
			return true;
		}
	}
	
	function clickProjects(){
		document.getElementById("projects").style.display = "block";
		document.getElementById("addProject").style.display = "none";
	}
	function clickNew(){
		document.getElementById("addProject").style.display = "block";
		document.getElementById("projects").style.display = "none";
	}
	
	document.getElementById("addProject").style.display = "none";
	document.getElementById("projects").style.display = "block";
	document.getElementById("submissionButton").disabled = true;